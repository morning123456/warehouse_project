<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<script type="text/javascript">
var hrType = "${hrType }";
console.log(hrType);

if(hrType==""){
	alert("근무유형이 선택되지 않았습니다.");
}
</script>

<script type="text/javascript">

</script>

<script type="text/javascript">
//csv에서 출근시간 가져오기
function getOnTime(){
	var data = {
			'eno' : ${loginUser.eno }
	}
	$.ajax({
		url : '<%=request.getContextPath()%>/ehr/getOnTime.do',
		data  : data,
		type : 'post',
		success: function(res){
			if(res.length<1){
				return;
			}
			printOnTime(res, $('.onTime-target'), $('#onTime-template'), $('.onTimeRemove'));
		},
		error:function(error){
			AjaxErrorSecurityRedirectHandler(error.status);
		}
	});
}

// getOnTime();
</script>

<script type="text/javascript">
//csv에서 퇴근시간 가져오기
function getOffTime(){
	var data = {
			'eno' : ${loginUser.eno }
	}
	$.ajax({
		url : '<%=request.getContextPath()%>/ehr/getOffTime.do',
		data  : data,
		type : 'post',
		success: function(res){
			if(res.length<1){
				return;
			}
			printOffTime(res, $('.offTime-target'), $('#offTime-template'), $('.offTimeRemove'));
		},
		error:function(error){
			AjaxErrorSecurityRedirectHandler(error.status);
		}
	});
}

// getOffTime();
</script>

<script type="text/javascript">
//퇴근하기
function leaveWork(){
	var onTime = $('.onTimeRemove').text();
	if(onTime == "미등록"){
		alert("출근 정보가 없습니다.");
		return;
	}
	var offTime = $('.js-time').text();
	var hrDate = $('#today').text().split('(')[0];
	console.log(offTime);
	console.log(hrDate);
	var data = {
			'eno' : ${loginUser.eno },
			'offTime' : offTime,
			'hrDate' : hrDate
	}
	$.ajax({
		url : '<%=request.getContextPath()%>/ehr/leaveWork.do',
		data  : data,
		type : 'post',
		success: function(res){
			if(res == "false"){
				alert("허가된 ip에서만 가능합니다.");
				return;
			}
			alert(res + " 퇴근");
			changeCondition("업무종료");
			$("#condition").val("업무종료").prop("selected", true);
			getOffTime();

		},
		error:function(error){
			AjaxErrorSecurityRedirectHandler(error.status);
		}
	});

}
</script>

<script type="text/javascript">
//출근하기
function goToWork(){
	var onTime = $('.js-time').text();
	var hrDate = $('#today').text().split('(')[0];
	console.log(onTime);
	console.log(hrDate);
	var data = {
			'eno' : ${loginUser.eno },
			'onTime' : onTime,
			'hrDate' : hrDate
	}
	$.ajax({
		url : '<%=request.getContextPath()%>/ehr/goToWork.do',
		data  : data,
		type : 'post',
		success: function(res){
			console.log(res);
			if(res == "false"){
				alert("허가된 ip에서만 가능합니다.");
				return;
			}
			alert(res + " 출근");
			changeCondition("업무중");
			$("#condition").val("업무중").prop("selected", true);
			getOnTime();

		},
		error:function(error){
			AjaxErrorSecurityRedirectHandler(error.status);
		}
	});

}
</script>

<script type="text/javascript">
//근무상태 변경
function changeCondition(condition){
	if(condition == null){
		condition = $("#condition option:selected").val();
	}
	console.log(condition);
	var data ={
			'eno' : ${loginUser.eno },
			'condition' : condition
	}
	$.ajax({
		url : '<%=request.getContextPath()%>/ehr/changeCondition.do',
		data  : data,
		type : 'post',
		success: function(res){
			if(res == "OK"){
				alert('근무상태가 '+condition+'으로 변경되었습니다.');

			}
		},
		error:function(error){
			AjaxErrorSecurityRedirectHandler(error.status);
		}
	});
}
</script>

<script type="text/javascript">
//현재시간 출력
function getTime() {
	var date = new Date();
	var hours = date.getHours();
	var minutes = date.getMinutes();
	var seconds = date.getSeconds();
	hours = hours < 10 ? '0'+hours : hours;
	minutes = minutes < 10 ? '0'+minutes : minutes;
	seconds = seconds < 10 ? '0'+seconds : seconds;

	$('.js-time').text(hours  + ':' + minutes + ':' + seconds);
}

function init() {
	getTime();
	setInterval(getTime, 1000);
}

init();

</script>

<script type="text/javascript">
//다른 달 데이터 조회
function changeMonth(num) {
	console.log(num);
	var calendar = $('#month').text().trim();
	var calendarSplit = calendar.split('.');
	console.log(calendarSplit);

	var year = parseInt(calendarSplit[0]);
	var month = calendarSplit[1]-1 + parseInt(num);

	if(month>11){
		month = 0;
		year += 1;
	}
	if(month<0){
		month = 11;
		year -= 1;
	}

	var creDate = new Date(year, month);
	console.log(creDate);

	if((month+1)<10){
		month = '0'+(month+1);
	} else {
		month = month+1
	}

	$('#month').text('');
	$('#month').html('&nbsp;&nbsp;'+year+'.'+month+'&nbsp;&nbsp;');
	onloadHrTable(creDate);
}
</script>

<script>
//근태 테이블 조회
function onloadHrTable(date){
	if(date == null){
		date = new Date();
	}

	var data = {
			'eno' : ${loginUser.eno },
			'date' : date
	}

	$.ajax({
		url : '<%=request.getContextPath()%>/ehr/onloadHrTable.do',
		data : data,
		type : 'post',
		success: function(res){
			$('.tableOn').remove();
			$('.removeWeekHr').remove();
			for(var i=0; i<5; i++) {
				printHrTable(res.monthList[i], $('.table-target').eq(i), $('#table-template'));
				printWeekHr(res.hrTimeList[i], $('.week-target').eq(i), $('#weekHr-template'));
			}
		},
		error:function(error){
			AjaxErrorSecurityRedirectHandler(error.status);
		}
	});

}
// onloadHrTable();
</script>

<script type="text/x-handlebars-template"  id="onTime-template" >
<a class="float-right onTimeRemove">{{""}}</a>
</script>

<script type="text/x-handlebars-template"  id="offTime-template" >
<a class="float-right offTimeRemove">{{""}}</a>
</script>

<script type="text/x-handlebars-template"  id="weekHr-template" >
<span class="removeWeekHr" style="text-align:left;">{{""}}</span>
</script>

<script type="text/x-handlebars-template"  id="table-template" >
{{#each .}}
		<tr class="tableOn">
			<td style="color: {{formatDateColor hrDate}};">{{formatDate hrDate}}</td>
			<td style="color: {{formatTimeColor state}};">{{onTime}}</td>
			<td>{{offTime}}</td>
			<td>{{hrTime}}</td>
			<td><small>기본 </small>{{hrTime}}&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;<small>연장 </small>{{overTime}}</td>
			<td style="color : #007bff;">{{reqChange reqChange}}</td>
		</tr>
{{/each}}
</script>

<script>
//handelbars printElement (args : data Array, appent target, handlebar template, remove class)
function printOffTime(dataArr,target,templateObject, removeClass){
	var template=Handlebars.compile(templateObject.html());

	var html = template(dataArr);

	removeClass.remove();

	target.append(html);
}

function printOnTime(dataArr,target,templateObject, removeClass){
	var template=Handlebars.compile(templateObject.html());

	var html = template(dataArr);

	removeClass.remove();

	target.append(html);
}

function printHrTable(dataArr,target,templateObject){
	var template=Handlebars.compile(templateObject.html());

	var html = template(dataArr);

	target.append(html);
}

function printWeekHr(dataArr,target,templateObject){
	var template=Handlebars.compile(templateObject.html());

	var html = template(dataArr);
	target.append(html);
}
</script>

<script type="text/javascript">
Handlebars.registerHelper({
	"formatDate" : function(strDate){
		var dateObj = new Date(strDate);
		var year = dateObj.getFullYear();
		var month = dateObj.getMonth() + 1;
		var date = dateObj.getDate();
		var day = dateObj.getDay();
		var week = new Array('일', '월', '화', '수', '목', '금', '토');
		return date+"("+ week[dateObj.getDay()] +")";
	},
	"formatDateColor" : function(strDate){
		var color = "";
		var dateObj = new Date(strDate);
		var day = dateObj.getDay();
		if(day==0){
			color = "red";
		} else if(day==6){
			color = "#007bff";
		}
		return color;
	},
	"formatTimeColor" : function(state){
		var color = "";
		if(state==2){
			color = "red";
		}else{
			color = "black";
		}
		return color;
	},
	"reqChange" : function(reqChange){
		var result = "";
		if(reqChange==1){
			result = "변경 신청";
		} else if(reqChange==2){
			result = "변경 승인";
		}
		return result;
	}
})
</script>    