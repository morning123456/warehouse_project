package kr.or.warehouse.controller.rest;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import kr.or.warehouse.command.Criteria;
import kr.or.warehouse.dto.EmployeeVO;
import kr.or.warehouse.service.ContactService;

@RestController
@RequestMapping("contact")
public class ContactRestController {

	@Autowired
	private ContactService service;

	@RequestMapping("getTeamList")
	public ResponseEntity<Map<String, Object>> getTeamList(Criteria cri ,String dname) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataMap = service.getTeamContactList(cri, dname);
			result = new ResponseEntity<Map<String,Object>>(dataMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}

	@RequestMapping("getGroupList")
	public ResponseEntity<Map<String,Object>>getGroupList(Criteria cri, String cogroupcode)throws Exception{
		ResponseEntity<Map<String, Object>> resultGroup = null;

		try {
			Map<String, Object>groupInfoMap = service.getGroupInfoList(cri, cogroupcode);
			resultGroup = new  ResponseEntity<Map<String,Object>>(groupInfoMap,HttpStatus.OK);
		} catch (Exception e) {
			resultGroup = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return resultGroup;
	}

//------------------------------------------------ 초성 -------------------------------------------------------
	@RequestMapping("getGiList")
	public ResponseEntity<Map<String, Object>> getGiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getGiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getNiList")
	public ResponseEntity<Map<String, Object>> getNiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getNiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}
	@RequestMapping("getDiList")
	public ResponseEntity<Map<String, Object>> getDiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getDiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getRiList")
	public ResponseEntity<Map<String, Object>> getRiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getRiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}
	@RequestMapping("getMiList")
	public ResponseEntity<Map<String, Object>> getMiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getMiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getBiList")
	public ResponseEntity<Map<String, Object>> getBiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getBiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}
	@RequestMapping("getXiList")
	public ResponseEntity<Map<String, Object>> getXiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getXiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getOiList")
	public ResponseEntity<Map<String, Object>> getOiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getOiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}
	@RequestMapping("getJiList")
	public ResponseEntity<Map<String, Object>> getJiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getJiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getCiList")
	public ResponseEntity<Map<String, Object>> getCiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getCiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}
	@RequestMapping("getCaiList")
	public ResponseEntity<Map<String, Object>> getCaiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getCaiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getTiList")
	public ResponseEntity<Map<String, Object>> getTiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getTiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}
	@RequestMapping("getPiList")
	public ResponseEntity<Map<String, Object>> getPiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getPiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}

		return result;
	}
	@RequestMapping("getHiList")
	public ResponseEntity<Map<String, Object>> getHiList(Criteria cri) throws Exception{
		ResponseEntity<Map<String, Object>> result = null;
		try {
			Map<String, Object> dataGiMap = service.getHiList(cri);
			result = new ResponseEntity<Map<String,Object>>(dataGiMap, HttpStatus.OK);
		} catch (Exception e) {
			result = new ResponseEntity<Map<String,Object>>(HttpStatus.INTERNAL_SERVER_ERROR);
			e.printStackTrace();
		}
		return result;
	}




}
